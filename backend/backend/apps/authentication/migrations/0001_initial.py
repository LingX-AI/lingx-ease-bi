# Generated by Django 5.1 on 2025-01-03 15:48

import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.OAUTH2_PROVIDER_APPLICATION_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Enable?')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Deleted?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('app_user_id', models.CharField(blank=True, help_text='Application User ID', max_length=64, null=True)),
                ('username', models.CharField(blank=True, help_text='Username in app', max_length=64, null=True)),
                ('email', models.EmailField(help_text='Email in app', max_length=64, unique=True)),
                ('mobile', models.CharField(blank=True, help_text='Mobile in app', max_length=64, null=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Is staff?')),
                ('app', models.ManyToManyField(help_text='Application', null=True, related_name='users', to=settings.OAUTH2_PROVIDER_APPLICATION_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
