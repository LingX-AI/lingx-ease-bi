export default {
  common: {
    submit: 'Submit',
    cancel: 'Cancel',
    nextStep: 'Next Step',
    view: 'View',
    actions: 'Actions',
    viewDetails: 'View Details',
    delete: 'Delete',
    deleteSuccess: 'Delete Success',
    search: 'Search',
    reset: 'Reset',
    showToggleMoreSearch: 'Show More Search',
    hideToggleMoreSearch: 'Hide More Search',
    all: 'All',
    createTime: 'Create Time',
    update: 'Update',
    disable: 'Disable',
    enable: 'Enable',
    enabled: 'Enabled',
    disabled: 'Disabled',
    enableTip: 'Are you sure you want to enable the current data?',
    disableTip: 'Are you sure you want to disable the current data?',
    more: 'More',
    confirm: 'Confirm',
    prompt: 'Prompt',
    updateSuccess: 'Update Success',
    createSuccess: 'Create Success',
    mobile: 'Mobile',
    save: 'Save',
    operationSuccess: 'Operation Success',
    remark: 'Remark',
    edit: 'Edit',
    saveSuccess: 'Save Success',
    deleteConfirm: 'Delete Confirm',
    deleteTip: 'Deleted data cannot be recovered. Are you sure you want to delete the current data?',
    updatePassword: 'Change Password',
    oldPassword: 'Old Password',
    logout: 'Logout',
    logoutTip: 'Are you sure you want to log out?',
    updatePasswordSuccess: 'Password changed successfully. Please log in again.',
    yes: 'Yes',
    no: 'No',
    male: 'Male',
    female: 'Female',
    notHave: 'Not have',
    date: 'Date:',
    fieldRequiredTip: 'This field is required',
    add: 'Add',
    ok: 'OK',
    days: 'Days',
    status: 'Status',
    updateTime: 'Update time',
    createdBy: 'Created By',
    updatedBy: 'Updated By',
    normal: 'Normal',
    isEnable: 'Enable?',
    selectAll: 'Select all',
    total: 'Total',
    loading: 'Loading',
    noData: 'No data',
    back: 'Back',
    enableSuccess: 'Successfully enabled',
    disableSuccess: 'Successfully disabled',
    copied: 'Copied',
    promptWord: 'Prompt',
    query: 'Query',
  },
  login: {
    login: 'Login',
    username: 'Username',
    password: 'Password',
    usernameRequired: 'Please enter the username',
    passwordRequired: 'Please enter the password',
    usernameError: 'Username is invalid',
    passwordError: 'Password is invalid',
    rememberMe: 'Remember me',
    welcome: 'Welcome to LingX Ease BI, please log in to continue.ðŸ‘‹',
    title: 'LingX Ease BI',
    slogan: 'Supercharge your business with AI solutions that push the boundaries of innovation',
    usernamePlaceholder: 'Please enter username',
    passwordPlaceholder: 'Please enter password',
  },
  chat: {
    wantKnow: 'You might want to know...',
    delete: 'Delete',
    regenerate: 'Regenerate',
    copy: 'Copy',
    copied: 'Copied',
    downloadPng: 'Download PNG image',
    downloadJpg: 'Download JPG image',
    exportExcel: 'Export as Excel',
    exportCsv: 'Export as CSV',
    chartHistory: 'Conversation History',
    askQuestion: 'Ask a question...',
    today: 'Today',
    searchConversation: 'Search conversation...',
    generatingChart: 'Generating chart...',
    questionAgent: 'Question Verification and Optimization',
    sqlGeneratorAgent: 'Constructing Query Statements',
    dbQueryAgent: 'Execute Query Statement',
    displayAgent: 'Generate Final Answer',
    query: 'Query',
    latency: 'Latency',
    title: 'Chat',
    noApplicationData: 'No application database available for chat',
    sqlPreview: 'SQL Preview',
    errorMessage: 'Error Message',
    optimizedQuestion: 'Optimized Question',
  },
  application: {
    createApp: 'Create Application',
    updateApp: 'Update Application',
    name: 'Application Name',
    description: 'Description',
    clientId: 'Client ID',
    clientSecret: 'Client Secret',
    database: 'Database',
    dbHost: 'Database Host',
    dbPort: 'Database Port',
    dbName: 'Database Name',
    dbUser: 'Database User',
    dbPassword: 'Database Password',
    saveSuccess: 'Application data saved successfully',
    nameRequired: 'Please input application name',
    descRequired: 'Please input application description',
    clientIdRequired: 'Please input client ID',
    clientSecretRequired: 'Please input client secret',
    dbRequired: 'Please select database type',
    dbHostRequired: 'Please input database host',
    dbPortRequired: 'Please input database port',
    dbNameRequired: 'Please input database name',
    dbUserRequired: 'Please input database user',
    dbPasswordRequired: 'Please input database password',
    databaseList: 'Application Database List',
    aiConfig: 'AI Config',
    startChat: 'Start Chat',
    externalLink: 'External Link',
    externalLinkDesc: 'External link is used to provide chat service to the public',
    suggestedQuestions: {
      title: 'Suggested Questions',
      menuTitle: 'Suggested Questions',
      placeholder: 'Please enter suggested question',
      add: 'Add Question',
      emptyWarning: 'Question cannot be empty',
      updateSuccess: 'Update successful',
    },
  },
  dataset: {
    dataStructure: 'Database Structure',
    knowledgeBase: 'Knowledge Base',
    fineTuningExample: {
      title: 'Fine-tuning Data',
      count: 'questions',
      generateQuestions: 'Generate Questions',
      prompt: 'Prompt',
      clear: 'Clear',
      fineTuningExamples: 'Fine-tuning Dataset',
      export: 'Export',
      exportJson: 'Export JSON File',
      exportCsv: 'Export CSV File',
      noQuestions: 'Please provide fine-tuning data to delete',
      saveSuccess: 'Fine-tuning data saved',
      enterQuestion: 'Please enter a question',
      executionResult: 'Execution Result',
      executionSuccess: 'Execution Successful',
      noResult: 'No Output Result',
      executionError: 'Execution Error',
      import: 'Import',
      importError: 'Import failed, please check file format',
      importTip: {
        title: 'Import Instructions',
        format: 'Please upload a JSON file in the following format:',
        dragText: 'Click or drag JSON file to this area to upload',
        pasteTitle: 'Or paste JSON array',
        pastePlaceholder: 'Please paste JSON array in the correct format...',
      },
      importFileRequired: 'Please select a file to import',
      importFormatError: 'You can only upload JSON files!',
      importQuestions: 'Import Questions',
    },
    modelTraining: 'Model Training',
    modelDeployment: 'Model Deployment',
    flowDescription: 'Flow Description',
    aiConfig: 'AI Configuration',
    databaseTable: 'Database Tables',
    editComplete: 'Complete Edit',
    promptWord: {
      questionClean: 'Question Cleaning Prompt',
      updateSuccess: 'Prompt word updated successfully',
      columnComment: 'Column Comment Prompt',
      questionBuilder: 'Question Builder Prompt',
      sqlGenerator: 'SQL Generator Prompt',
      schemaRagPrompt: 'Schema RAG Prompt',
      placeholder: 'Please enter prompt',
      variableTip({ named }: { named: (key: string) => string }) {
        return `The prompt must include variables ${named('promptVariables')} in the format of {variableName}.`
      },
      bracketsTip: 'If you need to preserve code block braces (like JSON objects), please wrap them with double braces, e.g.: {{your content}}',
    },
    more: 'More',
    updateDatabaseSchema: 'Update Database Schema',
    exportSchemaJson: 'Export Schema (JSON)',
    exportSchemaDDL: 'Export Schema (DDL)',
    autoReplaceAIComment: 'Auto Replace AI Comment',
    generateAIComment: 'Generate AI Comment',
    noDataStructure: 'No data structure yet, click the button below to create~',
    createNow: 'Create Now',
    fieldName: 'Field Name',
    fieldKey: 'Field Key',
    fieldType: 'Field Type',
    defaultValue: 'Default Value',
    nullable: 'Nullable',
    fieldComment: 'Field Comment',
    aiFieldComment: 'AI Field Comment',
    adjustedAiComment: 'Adjusted AI Comment',
    enableField: 'Enable',
    updateConfirmTitle: 'Update Confirmation',
    updateConfirmContent: 'This operation will retrieve the database table structure again and update the generated AI dataset. Do you want to continue?',
    updateStructureSuccess: 'Data structure updated successfully',
    databaseTableDocument: 'Database Table Documentation',
    characters: 'characters',
    retrievalDocument: 'Retrieval Document',
    enterRetrievalContent: 'Enter retrieval content',
    documentName: 'Document Name',
    type: 'Type',
    size: 'Size',
    tokenCount: 'Token Count',
    characterCount: 'Character Count',
    tryItOut: 'Try it out',
    noEmbeddingDocuments: 'No embedding documents yet, click the button below to create~',
    fineTuningModel: {
      trainingData: 'Training Data',
      trainingParameters: 'Training Parameters',
      parameterNote: 'This parameter is only applicable to',
      copy: 'Copy',
      download: 'Download',
      startFineTuning: 'Start Fine-tuning',
      prompt: 'Prompt',
    },
    deploymentModel: {
      title: 'Model Deployment',
      addModel: 'Add Model',
      updateModel: 'Update Model',
      modelName: 'Model Name',
      description: 'Description',
      modelNameRequired: 'Please input model name',
      descriptionRequired: 'Please input model description',
      saveSuccess: 'Model saved successfully',
      modelConversion: 'Model Conversion',
      modelDeployment: 'Model Deployment',
      convertAndDeploy: 'Model Convert/Deploy',
      executingTask: 'Task is executing, this may take some time, please wait patiently...',
      llamaCppTip: 'It is recommended to use <a class="text-primary underline" target="_blank" href="https://github.com/ggerganov/llama.cpp">llama.cpp</a> to convert the fine-tuned model to gguf format',
      modelNameTip: 'Model name is used to replace <modelName> in the conversion command',
      startConversion: 'Start Conversion',
      startDeployment: 'Start Deployment',
      command: 'Command',
      commandTip: 'Command to convert fine-tuned model to gguf format',
      commandTip1: 'Generate Modelfile file and deploy model to Ollama',
      commandRequired: 'Please input command',
      commandExample: 'Example Command',
      modelfile: 'Ollama Modelfile',
      modelfileTip: 'Used to generate Ollama Modelfile, will replace <Modelfile> in deployment command',
      modelfileRequired: 'Please input Ollama Modelfile Template',
      modelfileExample: 'Example Modelfile',
      example: 'Example',
      deploymentTips: {
        tip1: '1. Export the fine-tuned model before deployment;',
        tip2: '2. Currently only supports deployment to Ollama',
      },
      convertSuccess: 'Model conversion successful',
      deploySuccess: 'Model deployment successful',
    },
    embeddingDocument: {
      title: 'Embedding Document',
      createSuccess: 'Embedding document created successfully',
      notRecommended: 'We plan to replace vector retrieval with LLM retrieval in the future, creating vector data is not recommended',
    },
    enableRetrieval: 'Enable Retrieval',
    retrievalTip: {
      line1: 'Enabling retrieval may reduce SQL generation accuracy.',
      line2: 'Disabling retrieval helps improve SQL accuracy but may lead to excessive context length.',
    },
    similarity: 'Similarity',
  },
  settings: {
    title: 'Settings',
    currentUser: 'Current User',
    systemLanguage: 'System Language',
  },
}
